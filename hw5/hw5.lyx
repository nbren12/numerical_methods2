#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Numerical Methods HW5
\end_layout

\begin_layout Author
Noah D.
 Brenowitz
\end_layout

\begin_layout Date
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $A_{M}\in R^{d}\times R^{d}$
\end_inset

 be the negative discrete laplacian.
 Then, the vectors, 
\begin_inset Formula $\left(\mathbf{v}_{k}\right)_{j}=\frac{\sqrt{2}}{2}\delta_{k,j}+\frac{\sqrt{2}}{2}\delta_{-k,j}$
\end_inset

 for 
\begin_inset Formula $1\leq k\leq n-1$
\end_inset

, and 
\begin_inset Formula $\left(\mathbf{v}_{0}\right)_{j}=\delta_{0,j}$
\end_inset

 comprise an orthogonal basis for 
\begin_inset Formula $k(A_{M},n)$
\end_inset

.
 This is true because the following Lancos style iteration is easily verified
 for the basis above
\begin_inset Formula 
\begin{eqnarray*}
A\mathbf{v}_{k}=-\mathbf{v}_{k-1}-\mathbf{v}_{k+1}+2\mathbf{v}_{k} &  & 1\leq k\\
A\mathbf{v}_{0}=-\sqrt{2}\mathbf{v}_{1}+2\mathbf{v}_{0} &  & k=0.
\end{eqnarray*}

\end_inset

Therefore, for small 
\begin_inset Formula $n=2m+1$
\end_inset

, 
\begin_inset Formula $k(A,n)$
\end_inset

 consists only of even vectors where 
\begin_inset Formula $x_{k}=x_{-k}$
\end_inset

 and 
\begin_inset Formula $x_{k}=0$
\end_inset

 if 
\begin_inset Formula $|k|>m$
\end_inset

.
 Therefore, this question simply asks us to minimize the quadratric form
 this restricted subspace.
 Then the matrix vector product is defined as follows: 
\begin_inset Formula 
\[
y_{j}=\left(Ax\right)_{j}=\sum_{k=-M}^{M}A_{jk}x_{k}=\sum_{k=-m}^{m}A_{jk}x_{k}.
\]

\end_inset

While 
\begin_inset Formula $y$
\end_inset

 may have nonzero components outside the subspace (i.e.
 
\begin_inset Formula $y_{m+1}\ne0$
\end_inset

), we have that 
\begin_inset Formula $x_{m+1}y_{m+1}=0y_{m+1}=0$
\end_inset

, so that 
\begin_inset Formula $x^{t}Ax$
\end_inset

 has no contribution from these 
\begin_inset Quotes eld
\end_inset

out-of-subspace
\begin_inset Quotes erd
\end_inset

 components.
 Therefore, the minimization problem reduces to:
\begin_inset Formula 
\[
\lambda_{1,n}=\min_{x\in k(A,n)}\frac{x^{t}A_{M}x}{x^{t}x}=\min_{x\in k(A,n)}\frac{x^{t}A_{m}x}{x^{t}x}=\min_{x\in S}\frac{x^{t}A_{m}x}{x^{t}x}
\]

\end_inset

where 
\begin_inset Formula $S=\{x\in\mathbb{R}^{n}|x_{k}=x_{-k}\}$
\end_inset

 is the space of symmetric n-dimensional vectors.
 As it turns out, this is equivalent to finding the smallest eigenvalue
 the negativediscrete laplacian operator with a Neumann boundary condition
 at 
\begin_inset Formula $k=0$
\end_inset

 and a Dirichlet boundary condition at 
\begin_inset Formula $k=m+1$
\end_inset

.
 The Neumann condition enforces the symmetricity of the eigenvector, and
 the Dirichlet condition ensures that 
\begin_inset Formula $x_{m+1}$
\end_inset

 vanishes.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Therefore, the eigenvalue problem can be posed as 
\begin_inset Formula 
\[
2x_{k}-x_{k+1}-x_{k-1}=\lambda x_{k},\quad x_{1}-x_{-1}=x_{m+1}=0.
\]

\end_inset

Or alternatively, assuming 
\begin_inset Formula $x_{0}=1$
\end_inset

, then we have, 
\begin_inset Formula $x_{1}=2\alpha x_{0}-x_{-1}=2\alpha-x_{1}$
\end_inset

, so that 
\begin_inset Formula $x_{1}=\alpha$
\end_inset

, which we summarize the here: 
\begin_inset Formula 
\begin{eqnarray*}
x_{k+1} & = & 2\alpha x_{k}-x_{k-1}\\
x_{0} & = & 1\\
x_{1} & = & \alpha\\
x_{m+1} & = & 0,
\end{eqnarray*}

\end_inset

where 
\begin_inset Formula $\alpha=\lambda-2$
\end_inset

.
 Then this three-term recurrence relation is the same as for the Chebychev
 polynomials of the first kind 
\begin_inset Formula $T_{k}(\alpha)$
\end_inset

 
\begin_inset Foot
status open

\begin_layout Plain Layout
From wikipedia page for Chebychev polynomials and eignvectors of the discrete
 laplacian
\end_layout

\end_inset

.
 Then, the dirichlet boundary at the end of the domain yields 
\begin_inset Formula $T_{m+1}(\alpha)=x_{m+1}=0$
\end_inset

, so that the eigenvalues are related to roots of the degree 
\begin_inset Formula $m+1$
\end_inset

 Chebychev polynomial.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

As we saw in class, 
\begin_inset Formula $T_{n}(\cos(\theta))=\cos(n\theta)$
\end_inset

, so that 
\begin_inset Formula $T_{m+1}(\cos\theta)=\cos((m+1)\theta)=0$
\end_inset

 where 
\begin_inset Formula $\cos\theta=\alpha$
\end_inset

.
 This means that 
\begin_inset Formula $(m+1)\theta=\frac{\pi(2k+1)}{2}$
\end_inset

 for any integer 
\begin_inset Formula $k$
\end_inset

, so that
\begin_inset Formula 
\[
\lambda_{k}=2-2\alpha=2-2\cos\left(\frac{\pi(2k+1)}{2m+2}\right)=4\sin^{2}\left(\frac{\pi(2k+1)}{4m+4}\right)
\]

\end_inset

 are the eigenvalues we are looking for, and the eigenvectors associated
 with these, properly normalized, are indeed symmetric about the middle.
 Finally, 
\begin_inset Formula 
\[
\lambda_{1,n}=\min_{0\leq k\leq m}\lambda_{k}=4\sin^{2}\left(\frac{\pi}{4m+4}\right)=4\sin^{2}\left(\frac{\pi}{2n}\right).
\]

\end_inset


\begin_inset Newline newline
\end_inset

On the other hand, 
\begin_inset Formula $\lambda_{1}$
\end_inset

 the smallest eigenvalue of the full matrix 
\begin_inset Formula $A_{M}$
\end_inset

, which corresponds to the minimum eigenvalue of the discrete laplacian
 with dirichlet boundary conditions: 
\begin_inset Formula $x_{-M-1}=x_{M+1}=0$
\end_inset

.
 According to wikipedia, with a similar calculation, the smallest eigenvalue
 is 
\begin_inset Formula 
\[
\lambda_{1}=4\sin^{2}\left(\frac{\pi}{2(d+1)}\right).
\]

\end_inset

Finally, if we make a small angle approximation, we see that 
\begin_inset Formula 
\[
\frac{\lambda_{1,2m+1}}{\lambda_{1}}\approx\frac{d+1}{n}.
\]

\end_inset

 If 
\begin_inset Formula $d\gg n$
\end_inset

, then 
\begin_inset Formula $\lambda_{1,n}$
\end_inset

 is a very poor approximation indeed.
 
\end_layout

\begin_layout Enumerate
An example of ill-conditioning
\end_layout

\begin_deeper
\begin_layout Enumerate
Because 
\begin_inset Formula $Ax=b$
\end_inset

, we can see that
\begin_inset Formula 
\begin{eqnarray*}
x_{n+1}-x & = & x_{n}-x+t_{n}p_{n}\\
 & = & I(x_{n}-x)-t_{n}(Ax_{n}-b)\\
 & = & I(x_{n}-x)-t_{n}A(x_{n}-x)\\
 & = & (I-t_{n}A)(x_{n}-x).
\end{eqnarray*}

\end_inset

So that 
\begin_inset Formula $e_{n+1}=(I-t_{n}A)e_{n}.$
\end_inset

 The iteration is linear in the sense that future errors are related to
 past errors by matrix multiplication.
 However, 
\begin_inset Formula $t_{n}$
\end_inset

 does depend on 
\begin_inset Formula $x_{n}$
\end_inset

, so the formula itself is nonlinear.
\end_layout

\begin_layout Enumerate
The optimal step length can be found using the first-derivative test 
\begin_inset Formula 
\begin{eqnarray}
0 & = & \frac{dF(x_{n}+t_{n}p_{n})}{dt}=p_{n}\cdot\nabla F(x_{n}+t_{n}p_{n})\nonumber \\
 & = & p_{n}\cdot\left[A(x_{n}+t_{n}p_{n})-b\right]\label{eq:2a-orth}\\
 & = & p_{n}^{t}\left[-p_{n}+t_{n}Ap_{n}\right].\nonumber 
\end{eqnarray}

\end_inset

So that 
\begin_inset Formula $t_{n}=\frac{p_{n}^{t}p_{n}}{p_{n}^{t}Ap_{n}}$
\end_inset

, which is an inverse Rayleigh quotient bounded below by 
\begin_inset Formula $\lambda_{max}(A)^{-1}$
\end_inset

 and above by 
\begin_inset Formula $\lambda_{min}(A)^{-1}$
\end_inset

.
 Using the formulas gives 
\begin_inset Formula $p_{n+1}=Ax_{n+1}-b=A(x_{n}+t_{n}p_{n})-b$
\end_inset

, and comparing to 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:2a-orth"

\end_inset

 shows that
\begin_inset Formula 
\[
0=\frac{dF(x_{n}+t_{n}p_{n})}{dt_{n}}=p_{n}\cdot p_{n+1},
\]

\end_inset

as required.
\end_layout

\begin_layout Enumerate
As posted in the message board online, I will assume that this problem aims
 to minimize 
\begin_inset Formula $Q_{1}(x)=x_{1}^{2}+\epsilon x_{2}^{2}$
\end_inset

, which is a quadratic form 
\begin_inset Formula $x^{t}Ax$
\end_inset

, where 
\begin_inset Formula $A=\mbox{diag}([1,\epsilon])$
\end_inset

, moreover, assume that 
\begin_inset Formula $\epsilon>0$
\end_inset

 so that the matrix is positive.
 We that in 2d, that the orthogonality condition 
\begin_inset Formula $p_{k}^{t}p_{k+1}=0$
\end_inset

 implies 
\begin_inset Formula $p_{k}\propto p_{k+1}$
\end_inset

, which is a simple consequence of the dimension of the vector space.
 Therefore, if we know 
\begin_inset Formula $p_{0}$
\end_inset

, we can surmise the form of all the 
\begin_inset Formula $p_{k}$
\end_inset

.
 Without loss of generality, say that 
\begin_inset Formula $p_{2k+1}=p^{\perp}$
\end_inset

 and 
\begin_inset Formula $p_{2k}=p$
\end_inset

, where 
\begin_inset Formula $p:=p_{0}=(a,b)$
\end_inset

.
 The 
\begin_inset Formula $t_{k}$
\end_inset

 are then
\begin_inset Formula 
\[
p_{k+1}\propto Ax_{k+1}=A(x_{k}+t_{k}p_{k})
\]

\end_inset

so that the orthogonality again gives 
\begin_inset Formula $p_{k}^{t}A(x_{k}+t_{k}p_{k})=0$
\end_inset

...
 or 
\begin_inset Formula $t_{k}=-\frac{p_{k}^{t}Ax_{k}}{p_{k}^{t}Ap_{k}}$
\end_inset

.
 For the example given, let 
\begin_inset Formula $e_{0}=x_{0}=(a,1)$
\end_inset

, then 
\begin_inset Formula $p_{0}=-(a,\epsilon)$
\end_inset

 and 
\begin_inset Formula $p_{1}=-(-\epsilon,a)$
\end_inset

.
 Then,
\begin_inset Formula 
\begin{eqnarray*}
t_{2k} & = & \frac{ax_{k,1}+\epsilon^{2}x_{k,2}}{a^{2}+\epsilon^{3}}\\
t_{2k+1} & = & \frac{-\epsilon x_{k,1}+a\epsilon x_{k,2}}{\epsilon^{2}+\epsilon a^{2}}=\frac{-x_{k,1}+ax_{k,2}}{\epsilon+a^{2}}.
\end{eqnarray*}

\end_inset

I believe the answer lies somewhere in this line of thinking, but I am unable
 to go any further.
\end_layout

\end_deeper
\begin_layout Enumerate
The A-stable second order BDF formula
\end_layout

\begin_deeper
\begin_layout Enumerate
Taylor expanding up to second order explicitly and gather terms gives:
\begin_inset Formula 
\begin{eqnarray*}
\frac{1}{h}\left[c_{2}u(x-2h)+c_{1}u(x-h)+c_{0}u(x)\right] & = & \frac{1}{h}\left(c_{0}+c_{1}+c_{2}\right)u(x)-\left(2c_{2}+c_{1}\right)u'(x)\\
 &  & +h\left(2c_{2}+\frac{1}{2}c_{1}\right)+O(h^{2})
\end{eqnarray*}

\end_inset

For this scheme to approximate 
\begin_inset Formula $\partial_{x}u(x)$
\end_inset

, all the coefficients must vanish except for 
\begin_inset Formula $2c_{2}+c_{1}=-1$
\end_inset

.
 Which yiels the linear system
\begin_inset Formula 
\[
\begin{array}{ccccc}
c_{0} & +c_{1} & +c_{2} & = & 0\\
0 & c_{1} & +2c_{2} & = & -1\\
0 & c_{1}/2 & +2c_{2} & = & 0.
\end{array}
\]

\end_inset

Solving this yields 
\begin_inset Formula $c_{0}=3/2$
\end_inset

, 
\begin_inset Formula $c_{1}=-2$
\end_inset

, and 
\begin_inset Formula $c_{2}=1/2$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
The formula given in the problem description is incorrect because the coefficien
t of 
\begin_inset Formula $\Delta tf(x_{n})$
\end_inset

 cannot be unity.
 In any case, using the coefficients from the previous problem yields
\begin_inset Formula 
\[
f(x_{n})=\left(\frac{dx}{dt}\right)_{x=x_{n}}=\frac{1}{\Delta t}\left[\frac{3}{2}x_{n}-2x_{n-1}+\frac{1}{2}x_{n-2}\right]+O(\Delta t^{2}),
\]

\end_inset

where 
\begin_inset Formula $h:=\Delta t$
\end_inset

.
 Solving for 
\begin_inset Formula $x_{n}$
\end_inset

:
\begin_inset Formula 
\[
x_{n}=-\frac{1}{3}x_{n-2}+\frac{4}{3}x_{n-1}+\frac{2}{3}\Delta tf(x_{n})+O(\Delta t^{3}).
\]

\end_inset

This scheme's uniqueness results from the invertiblity of the linear system
 in part (a), and the reversibility of all the steps taken in this part.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $f(x_{n})=\lambda x_{n}$
\end_inset

, so we have that the difference equations from part (b) define a recurrence
 relation
\begin_inset Formula 
\[
(3-2\lambda\Delta t)x_{n}-4x_{n-1}+x_{n-2}=0.
\]

\end_inset

Let 
\begin_inset Formula $z=\lambda\Delta t$
\end_inset

, and the characteristic polynomial of this is 
\begin_inset Formula 
\[
(3-2z)r^{2}-4r+1=0.
\]

\end_inset

and A-stability requires that 
\begin_inset Formula $|r|^{2}<1$
\end_inset

 (otherwise the scheme would grow unboundly with iteration).
 The curve of marginal stability is defined by 
\begin_inset Formula $|r|^{2}=1$
\end_inset

, and it partitions the complex plane into 
\begin_inset Formula $S=\{z\in C|\mbox{A-stable}\}$
\end_inset

 and 
\begin_inset Formula $U=\{z\in C|\mbox{ unstable}\}$
\end_inset

.
 This is accomplished by assuming 
\begin_inset Formula $r=e^{i\theta}$
\end_inset

, and solving the quadratic equation above for z:
\begin_inset Formula 
\[
\partial S=\{-2e^{-i\theta}+\frac{1}{2}e^{-2i\theta}+\frac{3}{2}:\ \theta\in[0,2\pi)\}
\]

\end_inset

It is easy to show that for 
\begin_inset Formula $z\in\partial S$
\end_inset

, 
\begin_inset Formula $\Re z=-2\cos(\theta)+\frac{1}{2}\cos(2\theta)+\frac{3}{2}\geq-2+\frac{1}{2}+\frac{3}{2}=0$
\end_inset

, so that 
\begin_inset Formula $\partial S\subset\{z\in C:\ \Re z>0\}$
\end_inset

 .
 Then, if we can show stability for some 
\begin_inset Formula $\Re z<0$
\end_inset

, it must be the case that all 
\begin_inset Formula $z$
\end_inset

 outside of region enclosed by 
\begin_inset Formula $\partial S$
\end_inset

.
 In particular, letting 
\begin_inset Formula $z=-.5$
\end_inset

 gives 
\begin_inset Formula $0=4r^{2}-4r+1=(2r-1)^{2}$
\end_inset

, so that 
\begin_inset Formula $ $
\end_inset


\begin_inset Formula $r=1/2<1$
\end_inset

.
 In summary, 
\begin_inset Formula $\Re z\leq0$
\end_inset

 implies that the scheme is stable, which is the definition of A-stability.
\end_layout

\end_deeper
\begin_layout Enumerate
Adaptive Time Step: (all the code is under version control at github 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://github.com/nbren12/numerical_methods2/tree/master/hw5
\end_layout

\end_inset

)
\end_layout

\begin_deeper
\begin_layout Enumerate
I modified the code to use the classic RK4 method available at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods
\end_layout

\end_inset

.
 Here is the output:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset listings
lstparams "language=sh"
inline false
status collapsed

\begin_layout Plain Layout

make UnitTest
\end_layout

\begin_layout Plain Layout

c++    -c -o FixedStepVerify.o FixedStepVerify.C
\end_layout

\begin_layout Plain Layout

g++              -c -O2  -std=gnu++0x     f2D.C
\end_layout

\begin_layout Plain Layout

g++              -c -O2  -std=gnu++0x     RK4.C
\end_layout

\begin_layout Plain Layout

g++               -O2  -std=gnu++0x     FixedStepVerify.o f2D.o RK4.o -o FixedStepV
erifyExecutable
\end_layout

\begin_layout Plain Layout

./FixedStepVerifyExecutable
\end_layout

\begin_layout Plain Layout

Fixed Step Verify:
\end_layout

\begin_layout Plain Layout

For order 4 RK method, we expect the ratio to be 2^4=16
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Step Size is 0.314159 Error is 0.102433 Ratio is 8.04441
\end_layout

\begin_layout Plain Layout

Step Size is 0.15708 Error is 0.00576258 Ratio is 17.7756
\end_layout

\begin_layout Plain Layout

Step Size is 0.0785398 Error is 0.000332538 Ratio is 17.3291
\end_layout

\begin_layout Plain Layout

Step Size is 0.0392699 Error is 1.98926e-05 Ratio is 16.7166
\end_layout

\begin_layout Plain Layout

Step Size is 0.019635 Error is 1.21394e-06 Ratio is 16.3869
\end_layout

\begin_layout Plain Layout

Step Size is 0.00981748 Error is 7.49173e-08 Ratio is 16.2037
\end_layout

\begin_layout Plain Layout

Step Size is 0.00490874 Error is 4.65184e-09 Ratio is 16.1049
\end_layout

\begin_layout Plain Layout

Step Size is 0.00245437 Error is 2.89771e-10 Ratio is 16.0535
\end_layout

\begin_layout Plain Layout

Step Size is 0.00122718 Error is 1.80709e-11 Ratio is 16.0352
\end_layout

\begin_layout Plain Layout

Step Size is 0.000613592 Error is 1.14862e-12 Ratio is 15.7327
\end_layout

\begin_layout Plain Layout

Step Size is 0.000306796 Error is 1.90914e-14 Ratio is 60.1641
\end_layout

\begin_layout Plain Layout

Step Size is 0.000153398 Error is 3.48206e-14 Ratio is 0.548279
\end_layout

\begin_layout Plain Layout

Step Size is 7.6699e-05 Error is 3.80587e-15 Ratio is 9.14917
\end_layout

\begin_layout Plain Layout

Step Size is 3.83495e-05 Error is 2.88596e-14 Ratio is 0.131875
\end_layout

\begin_layout Plain Layout

g++              -c -O2  -std=gnu++0x     OneStepVerify.C
\end_layout

\begin_layout Plain Layout

g++               -O2  -std=gnu++0x     OneStepVerify.o f2D.o RK4.o -o OneStepVerif
yExecutable
\end_layout

\begin_layout Plain Layout

./OneStepVerifyExecutable
\end_layout

\begin_layout Plain Layout

One Step Verify:
\end_layout

\begin_layout Plain Layout

For order 4 RK method, we expect the ratio to be 2^5=32
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Step Size is 1 Error is 16.6383 Ratio is 1.24315e+09
\end_layout

\begin_layout Plain Layout

Step Size is 0.5 Error is 0.0155552 Ratio is 1069.63
\end_layout

\begin_layout Plain Layout

Step Size is 0.25 Error is 0.00105645 Ratio is 14.7241
\end_layout

\begin_layout Plain Layout

Step Size is 0.125 Error is 3.73086e-05 Ratio is 28.3164
\end_layout

\begin_layout Plain Layout

Step Size is 0.0625 Error is 1.19762e-06 Ratio is 31.1522
\end_layout

\begin_layout Plain Layout

Step Size is 0.03125 Error is 3.7669e-08 Ratio is 31.7934
\end_layout

\begin_layout Plain Layout

Step Size is 0.015625 Error is 1.17905e-09 Ratio is 31.9487
\end_layout

\begin_layout Plain Layout

Step Size is 0.0078125 Error is 3.68599e-11 Ratio is 31.9872
\end_layout

\begin_layout Plain Layout

Step Size is 0.00390625 Error is 1.15199e-12 Ratio is 31.9968
\end_layout

\begin_layout Plain Layout

Step Size is 0.00195312 Error is 3.60005e-14 Ratio is 31.9993
\end_layout

\begin_layout Plain Layout

Step Size is 0.000976562 Error is 1.12519e-15 Ratio is 31.9951
\end_layout

\begin_layout Plain Layout

Step Size is 0.000488281 Error is 3.52366e-17 Ratio is 31.9323
\end_layout

\begin_layout Plain Layout

Step Size is 0.000244141 Error is 1.13841e-18 Ratio is 30.9524
\end_layout

\begin_layout Plain Layout

Step Size is 0.00012207 Error is 5.42101e-20 Ratio is 21
\end_layout

\begin_layout Plain Layout

Step Size is 6.10352e-05 Error is 1.35525e-20 Ratio is 4
\end_layout

\begin_layout Plain Layout

Step Size is 3.05176e-05 Error is 6.77626e-21 Ratio is 2
\end_layout

\begin_layout Plain Layout

Step Size is 1.52588e-05 Error is 3.38813e-21 Ratio is 2
\end_layout

\begin_layout Plain Layout

Step Size is 7.62939e-06 Error is 1.69407e-21 Ratio is 2
\end_layout

\begin_layout Plain Layout

Step Size is 3.8147e-06 Error is 8.47033e-22 Ratio is 2
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset FormulaMacro
\newcommand{\dt}{\Delta t}
\end_inset

The residuals can be written in the following way:
\begin_inset Formula 
\begin{eqnarray*}
S(x,\dt)-x(t+\dt) & = & R(x,\dt),\mbox{ and }\\
S_{2}(x,\dt)-x(t+\dt) & = & R(x+R(x,\dt/2),\dt/2).
\end{eqnarray*}

\end_inset

So that 
\begin_inset Formula $S_{2}(x,\dt)-S(x,\dt)=R(x+R(x,\dt/2),\dt/2)-R(x,\dt)$
\end_inset

.
 Thus, the usefulness of this error estimator relies on how the two-step
 and one-step residuals relate.
 Because our scheme is order p, we can write the residual as 
\begin_inset Formula 
\[
R(x,\dt)=c(x,\dt)\dt^{p+1},\quad c=O(1).
\]

\end_inset

Therefore, 
\begin_inset Formula 
\begin{eqnarray*}
R(x+R(x,\dt/2),\dt/2) & = & R(x,\dt/2)+R(x,\dt/2)\cdot\nabla R(x,\dt/2)\\
 & = & R(x,\dt/2)+O(\dt^{2p+2})\\
 & = & c(x,\dt/2)\left(\frac{\dt}{2}\right)^{p+1}+O(\dt^{2p+2})\\
 & = & \left(c(x,\dt)+\frac{\dt}{2}\partial_{t}c\right)\left(\frac{\dt}{2}\right)^{p+1}+O(\dt^{2p+2})\\
 & = & c(x,\dt)\left(\frac{\dt}{2}\right)^{p+1}+O(\dt^{p+2})\\
 & = & R(x,\dt)/2^{p+1}+O(\dt^{p+2}).
\end{eqnarray*}

\end_inset

Putting it all together, we see that 
\begin_inset Formula $S_{2}(x,\dt)-S(x,\dt)=(1-2^{-(p+1)})R(x,\dt)+O(\dt^{p+2})$
\end_inset

 as required.
\end_layout

\begin_layout Enumerate
I implemented this step using the recusive function 
\begin_inset Quotes eld
\end_inset

adaptiveStep
\begin_inset Quotes erd
\end_inset

 in the file 
\begin_inset Quotes eld
\end_inset

RK4.C
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
This is implemented in the file 
\begin_inset Quotes eld
\end_inset

AdaptivePlanetMovie.C
\begin_inset Quotes erd
\end_inset

, where remade the movie using the same initial conditions as Homework3.
 At the bottom of the video is a bar, whose length is proportional to 
\begin_inset Formula $\log(\mbox{\# of time steps between plotting intervals)}$
\end_inset

.
 This bar is longer when the timesteps are shorter, and vice versa.
 From the video it is clear that the time step shortest when the planets
 are close to each other, and that 
\begin_inset Quotes eld
\end_inset

shooting-to-infinity
\begin_inset Quotes erd
\end_inset

 happens.
\end_layout

\end_deeper
\end_body
\end_document
